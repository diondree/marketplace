### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Membership {
  description: String!
  id: String!
  price: Float!
}

type Mutation {
  addProduct(description: String, featuredImage: String, images: [String!], name: String!, price: Float, storeId: String!): Product!
  createStore(biography: String, key: String, name: String!): Store!
  editProduct(description: String, featuredImage: String, id: String, images: [String!], name: String, price: Float, published: Boolean): Product!
  editStore(biography: String, id: String, key: String, name: String): Store!
  sellerLogin(email: String!, password: String!): SellerAuthPayload!
  sellerSignup(email: String!, name: String!, password: String!): SellerAuthPayload!
}

type Product {
  description: String
  id: String!
  name: String!
  price: Float!
  store: Store!
}

input ProductWhereUniqueInput {
  id: String
}

type Query {
  products: [Product!]!
  searchProducts(searchString: String): [Product!]!
  sellers(after: SellerWhereUniqueInput, before: SellerWhereUniqueInput, first: Int, last: Int, skip: Int): [Seller!]!
  stores: [Store!]!
}

type Seller {
  email: String!
  id: String!
  membership: SellerMembership
  name: String!
  store(after: StoreWhereUniqueInput, before: StoreWhereUniqueInput, first: Int, last: Int, skip: Int): [Store!]!
}

type SellerAuthPayload {
  seller: Seller!
  token: String!
}

type SellerMembership {
  active: Boolean!
  id: String!
  seller: Seller!
}

input SellerWhereUniqueInput {
  email: String
  id: String
}

type Store {
  active: Boolean!
  biography: String
  coverImage: String!
  id: String!
  key: String
  logo: String!
  name: String!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int, skip: Int): [Product!]!
  seller: Seller!
}

input StoreWhereUniqueInput {
  id: String
  key: String
}

type User {
  email: String!
  id: String!
  name: String
  password: String!
  username: String!
}
